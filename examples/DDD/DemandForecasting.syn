model DemandForecasting

///////////////
// Entities
PRODUCT: set;

///////////////
// Types: Values
DEMAND_SCHEMA        ::= AtDayStart | Till12 | TillDayEnd | Twice;

DEMAND               ::= (DEMAND_SCHEMA, level: N0');

ADJUSTMENT           ::= (DEMAND, strong:BOOLEAN);

DEMAND_VALUE         ::= (documented: DEMAND, adjustment: ADJUSTMENT);


///////////////
// Types: Maps/Dictionaries 
PRODUCT_DEMAND       ::= DATE +> DEMAND_VALUE;

ADJUSTMENTS_BY_DAY   ::= DATE +> ADJUSTMENT;

ADJUST_DEMAND        ::= (PRODUCT, ADJUSTMENTS_BY_DAY);  // AdjustDemand


///////////////
// Repository
ProductDemand: (PRODUCT, DATE) +> DEMAND_VALUE;


///////////////
// Query
ProductDemandStartingFrom ::= (product: PRODUCT, start: DATE) -> PRODUCT_DEMAND is 
    { (p, d): domain(ProductDemand) | p = product and start <= d @ (d, ProductDemand(p, d)) }; 



///////////////
///////////////
///////////////
// Transaction Script
operation Adjust

include model DemandForecasting

parameters
(
    Product: PRODUCT;    
    Start: DATE;
)

output
(
    Changes: DATE +> DEMAND_CHANGE; 
)



